[{"title":"Hello World","url":"/uncategorized/hello-world-2021-12.html","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"JavaScript-运算符：短路运算/赋值运算","url":"/JavaScript/JS-study/%E8%BF%90%E7%AE%97%E7%AC%A6-2021-12.html","content":"1.短路运算(逻辑中断)原理： 当有多个表达式（值）时,左边的表达式值可以确定结果时,就不再继续运算右边的表达式的值\n①逻辑与语法：表达式1 &amp;&amp; 表达式2\n如果第一个表达式的值为真，则返回表达式2\n如果第一个表达式的值为假，则返回表达式1\nconsole.log(123 &amp;&amp; 456);   //456console.log(0 &amp;&amp; 456);     //0console.log(123 &amp;&amp; 456 &amp;&amp; 789);  //789\n\n②逻辑或语法：表达式1 || 表达式2\n如果第一个表达式的值为真，则返回表达式1\n如果第一个表达式的值为假，则返回表达式2\nconsole.log(123 || 456); //123console.log(0 || 456);   //456console.log(123 || 456 || 789);  //123\n\nvar num = 0;console.log(123 || num++);// 先返回在加，相当于 (123 || 0)console.log(num);    // 123\n\n2.赋值运算符概念： 用来把数据赋值给变量的运算符。\n\n\n\n赋值运算符\n说明\n案例\n\n\n\n=\n直接赋值\nvar usrName = ‘我是值’\n\n\n+= ，-=\n加，减一个数后再赋值\nvar age = 10； age+=5；//15\n\n\n*=，/=，%=\n成，除，取模后再赋值\nvar age = 2; age*=5; //10\n\n\nvar age = 10;age += 5;  // 相当于 age = age + 5;age -= 5;  // 相当于 age = age - 5;age *= 10; // 相当于 age = age * 10;\n\n","categories":["JavaScript"]},{"title":"Test-page","url":"/uncategorized/page-2021-12.html","content":"test一下\n"}]